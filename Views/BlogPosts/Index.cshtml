@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Blog.Models.BlogPost>

@{
    
}
<div class="container-fluid" id="blogIndexPageTitleAndSearch">
    <div class="row">
        <h2 class="text-uppercase">All Posts</h2>
        @using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
        {
            <div class="controls controls-row search-row">
                <input id="searchStr" name="searchStr" class="input-block-level text-right" type="text" placeholder="Find...." maxlength="20" />
                <button id="searchStr" name="searchStr" class="btn btn-success" type="submit">
                    Search
                </button>
            </div>
        }
    </div>
</div>

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
    {
        @Html.ActionLink("Create", "Create", null, new { @class = "btn btn-primary", id = "createButton" })
    }
</p>

<div class="container-fluid text-center">

    <table class="table" id="blogIndexTable">
        <tr>
            <th>
                @Html.DisplayName("Created")
            </th>
            <th class="hidden">
                @Html.DisplayName("Updated")
            </th>
            <th class="">
                @Html.DisplayName("Title")
            </th>
            <th class="hidden">
                @Html.DisplayName("Sub-title")
            </th>
            <th class="hidden">
                @Html.DisplayName("Slug")
            </th>          
            <th>
                @Html.DisplayName("Body")
            </th>            
            <th class="hidden">
                @Html.DisplayName("MediaPath")
            </th>
            <th class="hidden">
                @Html.DisplayName("Published")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @item.Created.ToString("MM/dd/yyyy")
        </td>
        <td class="hidden">
            @Html.DisplayFor(modelItem => item.Updated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td class="hidden">
            @Html.DisplayFor(modelItem => item.Abstract)
        </td>
        <td class="hidden">
            @Html.DisplayFor(modelItem => item.Slug)
        </td>
        <td id="tableBody">
            @*@Html.Raw(item.Body);*@
            @Html.Raw(item.Body.Substring(0, Math.Min(item.Body.Length, 350)))
            @Html.ActionLink("...read more", "Details", new { slug = item.Slug }, new { style = "color:blue; text-decoration:none" })
            @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
            {
                <div>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </div>
            }
           
        </td>
        <td class="hidden">
            @Html.DisplayFor(modelItem => item.MediaPath)
        </td>
        <td class="hidden">
            @Html.DisplayFor(modelItem => item.Published)
        </td>
        <td>
            @if (item.MediaPath != null)
            {
                <img class="img-responsive" id="blogIndexImage" src="@item.MediaPath" alt="photo" />
            }
        </td>       
    </tr>
        }

    </table>
</div>

<div class="container">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchStr = ViewBag.Search }))
</div>
